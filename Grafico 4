def grafico4(x, y):
    topG = []
    topN = []
    gen = []
    qnt = []
    if x == '':
        for i in range(len(abrir)):
            linha = abrir.iloc[i]
            genero = linha['Genre']
            Na = int(linha['NA_Sales'])
            Eu = int(linha['EU_Sales'])
            Jp = int(linha['JP_Sales'])
            Outros = int(linha['Other_Sales'])
            soma = Na + Eu + Jp + Outros
            if genero in gen:
                lugar = gen.index(genero)
                qnt[lugar] += soma
            else:
                gen.append(genero)
                qnt.append(soma)
    elif y == '':
        for j in range(len(abrir)):
            linha = abrir.iloc[j]
            genero = linha['Genre']
            Na = int(linha['NA_Sales'])
            Eu = int(linha['EU_Sales'])
            Jp = int(linha['JP_Sales'])
            Outros = int(linha['Other_Sales'])
            soma = Na + Eu + Jp + Outros
            ano = linha['Year_of_Release']
            if int(x) == ano:
                if genero in gen:
                    lugar = gen.index(genero)
                    qnt[lugar] += soma
                else:
                    gen.append(genero)
                    qnt.append(soma)
                
    else:
        for k in range(len(abrir)):
            linha = abrir.iloc[k]
            genero = linha['Genre']
            Na = int(linha['NA_Sales'])
            Eu = int(linha['EU_Sales'])
            Jp = int(linha['JP_Sales'])
            Outros = int(linha['Other_Sales'])
            soma = Na + Eu + Jp + Outros
            ano = linha['Year_of_Release']
            if int(x) <= ano <= int(y):
                if genero in gen:
                    lugar = gen.index(genero)
                    qnt[lugar] += Na + Eu + Jp + Outros
                else:
                    gen.append(genero)
                    qnt.append(Na + Eu + Jp + Outros)
    for q in range(0, 10):
        s = max(qnt)
        topN.append(s)
        l = qnt.index(s)
        topG.append(gen[l])
        qnt[l] = 0
    return topG, topN
